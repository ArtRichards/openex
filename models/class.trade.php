<?php//error_reporting(E_ALL);//ini_set('display_errors', '1'); class Trade{	public $trade_value;	public $trade_amount;	public $trade_type;	public $trade_id = 0;	public $trade_to;	public $trade_from;	public $trade_fees;	public $trade_owner;	public $trade_total;	public $etrade_owner;	public $etrade_type;	public $etrade_id = 0;	public $etrade_value;	public $etrade_amount;//	public $standard;	public $standarde;	public $sold;	public function UpdateTrade()	{		$id = $this->trade_id;		$amount = $this->trade_amount;		if($id == 0 && $amount > 0)		{			$trade_to = $this->trade_to;			$trade_from = $this->trade_from;			$trade_value = $this->trade_value;			$trade_owner = $this->trade_owner;			$trade_type = $this->trade_type;			$trade_fees = $this->trade_fees;			$trade_total = $this->trade_total;			mysql_query("INSERT INTO trades (`To`,`From`,`Amount`,`Value`,`User_ID`,`Type`,`Fee`,`Total`)VALUES ('$trade_to','$trade_from','$amount','$trade_value','$trade_owner','$trade_type','$trade_fees','$trade_total');");		}		else		{			if($this->trade_amount == 0)			{							mysql_query("DELETE FROM trades WHERE `Id`='$id'");			}			else			{				mysql_query("UPDATE trades SET `Amount`='$amount' WHERE `Id`='$id'");			}		}			}	public function UpdateETrade()	{		$id = $this->etrade_id;		if($id != 0)		{		$amount = $this->etrade_amount;		if($this->etrade_amount == 0)		{					mysql_query("DELETE FROM trades WHERE `Id`='$id'");		}		else		{			mysql_query("UPDATE trades SET `Amount`='$amount' WHERE `Id`='$id'");		}		}	}	function Trade($id)	{		$tradesql = mysql_query("SELECT * FROM trades WHERE `Id`='$id'");		$this->trade_value = mysql_result($tradesql,0,"Value");		$this->trade_amount = mysql_result($tradesql,0,"Amount");		$this->standard = mysql_result($tradesql,0,"Amount");		$this->trade_id = $id;		$this->trade_from = mysql_result($tradesql,0,"From");		$this->trade_to = mysql_result($tradesql,0,"To");		$this->trade_owner = mysql_result($tradesql,0,"User_ID");		$temp = mysql_result($tradesql,0,"Type");		$this->trade_type = $temp;	}	public function GetEquivalentTrade()	{		if($this->trade_from == $this->trade_type)		{			echo "Yup";			$from = $this->trade_from;			$value = $this->trade_value;			$type = $this->trade_type;			$tradesql2 = mysql_query("SELECT * FROM trades WHERE `To` = '$from' AND `Value` >= '$value' AND `Type`='$type'");			$this->etrade_id = mysql_result($tradesql2,0,"Id");			$this->etrade_value = mysql_result($tradesql2,0,"Value");			$this->etrade_amount = mysql_result($tradesql2,0,"Amount");			$this->standarde = mysql_result($tradesql2,0,"Amount");			$this->etrade_owner = mysql_result($tradesql2,0,"User_ID");			$this->etrade_to = mysql_result($tradesql2,0,"To");			$this->etrade_from = mysql_result($tradesql2,0,"From");			$temp = mysql_result($tradesql2,0,"Type");			$this->etrade_type = $temp;		}		else		{			echo "Nope";			echo "<br/>" . $this->trade_value;			$from = $this->trade_from;			$value = $this->trade_value;			$type = $this->trade_type;			$tradesql2 = mysql_query("SELECT * FROM trades WHERE `To` = '$from' AND `Value` <= '$value' AND `Type`='$type'");			$this->etrade_id = mysql_result($tradesql2,0,"Id");			$this->etrade_value = mysql_result($tradesql2,0,"Value");						$this->etrade_amount = mysql_result($tradesql2,0,"Amount");			$this->standarde = mysql_result($tradesql2,0,"Amount");			$this->etrade_owner = mysql_result($tradesql2,0,"User_ID");			$this->etrade_to = mysql_result($tradesql2,0,"To");			$this->etrade_from = mysql_result($tradesql2,0,"From");			$temp = mysql_result($tradesql2,0,"Type");						$this->etrade_type = $temp;		}			}	public function ExecuteTrade()	{		$buyer = "";		$seller = "";		if($this->etrade_id != NULL)		{			if($this->trade_from == "BTC")			{				$buyer = $this->trade_owner;				$seller = $this->etrade_owner;			}			else			{				$buyer = $this->etrade_owner;				$seller = $this->trade_owner;			}			$price = 0;			$price2 = 0;			if($this->trade_from == $this->trade_type) //Sell Order			{				$price2 = $this->etrade_value;				$price = $this->trade_value;				$difference = $this->trade_amount - $this->etrade_amount;				if($difference < 0)				{					$newamount = 0 - $difference;					$sellmoney = $price * $this->trade_amount;						$buymoney = ($this->etrade_amount - $newamount);					$this->sold = $buymoney;					AddMoney($sellmoney, $this->trade_owner, $this->trade_to);					AddMoney($buymoney,$this->etrade_owner,$this->etrade_to);					$this->etrade_amount = $newamount;					$this->trade_amount = 0;					//echo "1";									}				if($difference > 0)				{					$newamount = 0 + $difference;					$sellmoney = ($this->trade_amount - $newamount) * $price;					AddMoney($sellmoney, $this->trade_owner, $this->trade_to);					AddMoney($this->etrade_amount,$this->etrade_owner,$this->etrade_to);					$this->sold = $this->etrade_amount;					$this->trade_amount = $newamount;					$this->etrade_amount=0;				//	echo "2";				}				if($difference == 0)				{					AddMoney($this->trade_amount * $price, $this->trade_owner, $this->etrade_to);					AddMoney($this->etrade_amount,$this->etrade_owner,$this->etrade_to);					$this->sold = $this->etrade_amount;					$this->trade_amount=0;					$this->etrade_amount=0;					//echo "3";				}			}			else //Buy Order			{				$price = $this->etrade_value;				$price2 = $this->trade_value;				$difference = $this->etrade_amount - $this->trade_amount;					if($difference < 0)					{						$newamount = 0 - $difference;						$sellmoney = $price * $this->etrade_amount;							$buymoney = ($this->trade_amount - $newamount);						$this->sold = $buymoney;						AddMoney($sellmoney, $this->etrade_owner, $this->etrade_to);						AddMoney($buymoney,$this->trade_owner,$this->trade_to);						$this->trade_amount = $newamount;						$this->etrade_amount = 0;						//echo "1";											}					if($difference > 0)					{						$newamount = 0 + $difference;						$sellmoney = ($this->etrade_amount - $newamount) * $price;						AddMoney($sellmoney, $this->etrade_owner, $this->etrade_to);						AddMoney($this->trade_amount,$this->trade_owner,$this->trade_to);						$this->sold = $this->trade_amount;						$this->etrade_amount = $newamount;						$this->trade_amount=0;						//echo "2";					}					if($difference == 0)					{						AddMoney($this->etrade_amount * $price, $this->etrade_owner, $this->etrade_to);						AddMoney($this->trade_amount,$this->trade_owner,$this->trade_to);						$this->sold = $this->trade_amount;						$this->etrade_amount=0;						$this->trade_amount=0;						//echo "3";					}			}				if($price2 > $price)				{					$refund = ($this->sold * $price2) - ($this->sold * $price);					$refund2 = $refund - file_get_contents("http://openex.pw/system/calculatefees2.php?P=" . ($this->sold * $price));					AddMoney($refund2,$buyer,"BTC");					echo "Refunded $refund2";				}				$type = $this->trade_type;				$sql_112 = mysql_query("SELECT * FROM Wallets WHERE `Acronymn`='$type'");				$type_id = mysql_result($sql_112,0,"Id");				$quantity = $this->standard;				$time = time();//				mysql_query("INSERT INTO Trade_History (`Market_Id`,`Price`,`Quantity`,`Timestamp`,`Buyer`,`Seller`)VALUES ('$type_id','$price','$quantity','$time','$buyer','$seller');");					}			$this->UpdateTrade();			$this->UpdateETrade();	}}?>